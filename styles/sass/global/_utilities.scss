@mixin vertical-align {
  position: relative;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

@mixin antialiased {
	-webkit-font-smoothing: antialiased;
}

.folded,
.toggled {
	
	dt,
	dd {
		display: block;
	}
	
	dt {
		font-size: 1.2rem;
		padding: .5rem 0;
		font-weight: 300;
	}
	
	dt:not(.unfolded)::before {
		display: block;
		float: right;
		color: $gray-light;
		padding-left: 10px;
		font-family: Spine-Icons;
		content: "\F501";
		font-weight: normal;
		font-size: 14px;
	}

	dt:not(.unfolded):hover::before {
		color: $gray-dark;
	}

	
	dt:nth-of-type(odd)
	dt:nth-of-type(odd) + dd {
		background: linear-gradient(to right,  rgba(255,255,255,0) 0%,rgba(255,255,255,1) 50%,rgba(255,255,255,0) 100%);
	}
	
	dt:not(.unfolded):nth-of-type(even),
	dt:not(.unfolded):nth-of-type(even) + dd {
		background: linear-gradient(to right,  rgba(255,255,255,0) 0%,rgba(234,234,234,1) 50%,rgba(255,255,255,0) 100%);
	}
		
	dt {
		border-top: 1px transparent solid;
	}
	
	dd {
		display: none;
	}
	
	dt.unfolded,
	dd.unfolded {
		color: black;
	}
	
	dt.unfolded {
		border-top: 1px $gray solid;
		padding-bottom: .25rem;
	}
	
	dt.unfolded + dd {
		border-bottom: 1px rgba(0, 0, 0, 0.1) solid;
	}
	
	dd {
		opacity: .5;
		transition: opacity .5s ease-in;
	}
	
	dd.unfolded {
		display: block;
		padding-bottom: 1rem;
		opacity: 1;
	}
	
	dt:hover {
		cursor: pointer;
		color: black;
	}
	
}